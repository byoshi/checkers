package com.example.checkers;

import java.util.ArrayList;
import java.util.Arrays;
import java.lang.Integer;
import android.content.Context;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.GridView;
import android.widget.ImageView;

public class ImageAdapter extends BaseAdapter {
	// private int index = 0;
	// private int row = 0;
	private int boardSize = 64;
	// private int curSquare = 0;
	private ArrayList<Integer> blackPieceLocations = new ArrayList<Integer>();
	private int[] redPieceLocations = { 40, 42, 44, 46, 49, 51, 53, 55, 56, 58,
			60, 62 };
	private int[] redSquareLocations = { 0, 2, 4, 6, 9, 11, 13, 16, 18, 20, 22,
			25, 27, 29, 31, 32, 34, 36, 38, 41, 43, 45, 47, 48, 50, 52, 54, 57,
			59, 61, 63 };
	private int[] blackSquareLocations = { 24, 26, 28, 30, 33, 35, 37, 39 };
	private Context mContext;

	private void populateBlackPieceLocations() {
		int row = 0;
		int numPieces = 0;
		for (int i = 1; i < 21; i += 2) {
			blackPieceLocations.add(i);
			if (numPieces % 3 == 0) {
				row++;
			}
			if (row == 1) {
				i--;
			} else if (row == 2) {
				i++;
			}
			numPieces++;
		}
	}

	public ImageAdapter(Context c) {
		mContext = c;
	}

	public int getCount() {
		populateBlackPieceLocations();
		return boardSize;
	}

	public Object getItem(int position) {
		return null;
	}

	public long getItemId(int position) {
		return 0;
	}

	// create a new ImageView for each item referenced by the Adapter
	public View getView(int position, View convertView, ViewGroup parent) {
		ImageView imageView;
		if (convertView == null) // if it's not recycled, initialize some
									// attributes
		{
			imageView = new ImageView(mContext);
			imageView.setLayoutParams(new GridView.LayoutParams(85, 85));
			imageView.setPadding(0, 0, 0, 0);
		} else {
			imageView = (ImageView) convertView;
		}
		// if (Arrays.asList(blackPieceLocations).contains(position)) {
		if (blackPieceLocations.contains(position)) {
			imageView.setImageResource(checkersIds[2]);
		} else if (Arrays.asList(redPieceLocations).contains(position)) {
			imageView.setImageResource(checkersIds[3]);
		} else if (Arrays.asList(blackSquareLocations).contains(position)) {
			imageView.setImageResource(checkersIds[0]);
		} else if (Arrays.asList(redSquareLocations).contains(position)) {
			imageView.setImageResource(checkersIds[1]);
		}

		return imageView;
	}

	/*
	 * private void alternateIndex() { if (curSquare - 8 == 0) { row++;
	 * curSquare = 0; return; } if (index == 0 && row == 3 || row == 4) { index
	 * = 1; } else { index = 0; } curSquare++; }
	 */

	// references to our images
	private Integer[] checkersIds = { R.drawable.brownsquare,
			R.drawable.redsquare, R.drawable.brownsquareblackpiece,
			R.drawable.brownsquareredpiece };
}